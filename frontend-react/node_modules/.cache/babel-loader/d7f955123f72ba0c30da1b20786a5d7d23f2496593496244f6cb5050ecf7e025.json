{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:8080/api';\n\n// Get token from localStorage\nconst getAuthHeader = () => {\n  const token = localStorage.getItem('token');\n  return token ? {\n    Authorization: `Bearer ${token}`\n  } : {};\n};\n\n// Create axios instance with default config\nconst api = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Add auth token to requests\napi.interceptors.request.use(config => {\n  const headers = getAuthHeader();\n  config.headers.set('Authorization', headers.Authorization);\n  return config;\n});\nexport const bookingService = {\n  getAllBookings: () => {\n    return api.get('/bookings');\n  },\n  getBookingById: id => {\n    return api.get(`/bookings/${id}`);\n  },\n  createBooking: bookingData => {\n    return api.post('/bookings', bookingData);\n  },\n  updateBooking: (id, bookingData) => {\n    return api.put(`/bookings/${id}`, bookingData);\n  },\n  deleteBooking: id => {\n    return api.delete(`/bookings/${id}`);\n  },\n  updateBookingStatus: (id, status) => {\n    return api.patch(`/bookings/${id}/status`, {\n      status\n    });\n  }\n};","map":{"version":3,"names":["axios","API_URL","getAuthHeader","token","localStorage","getItem","Authorization","api","create","baseURL","headers","interceptors","request","use","config","set","bookingService","getAllBookings","get","getBookingById","id","createBooking","bookingData","post","updateBooking","put","deleteBooking","delete","updateBookingStatus","status","patch"],"sources":["/Users/arifkhan/bike-service-booking/frontend-react/src/services/bookingService.ts"],"sourcesContent":["import axios, { AxiosRequestConfig, InternalAxiosRequestConfig } from 'axios';\n\nconst API_URL = 'http://localhost:8080/api';\n\n// Get token from localStorage\nconst getAuthHeader = () => {\n  const token = localStorage.getItem('token');\n  return token ? { Authorization: `Bearer ${token}` } : {};\n};\n\n// Create axios instance with default config\nconst api = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Add auth token to requests\napi.interceptors.request.use((config: InternalAxiosRequestConfig) => {\n  const headers = getAuthHeader();\n  config.headers.set('Authorization', headers.Authorization);\n  return config;\n});\n\nexport interface BookingResponse {\n  id: number;\n  customerName: string;\n  bikeModel: string;\n  serviceType: string;\n  bookingDate: string;\n  status: 'PENDING' | 'CONFIRMED' | 'COMPLETED' | 'CANCELLED';\n  phoneNumber: string;\n  email: string;\n}\n\nexport const bookingService = {\n  getAllBookings: () => {\n    return api.get<BookingResponse[]>('/bookings');\n  },\n\n  getBookingById: (id: number) => {\n    return api.get<BookingResponse>(`/bookings/${id}`);\n  },\n\n  createBooking: (bookingData: Omit<BookingResponse, 'id'>) => {\n    return api.post<BookingResponse>('/bookings', bookingData);\n  },\n\n  updateBooking: (id: number, bookingData: Partial<BookingResponse>) => {\n    return api.put<BookingResponse>(`/bookings/${id}`, bookingData);\n  },\n\n  deleteBooking: (id: number) => {\n    return api.delete(`/bookings/${id}`);\n  },\n\n  updateBookingStatus: (id: number, status: BookingResponse['status']) => {\n    return api.patch<BookingResponse>(`/bookings/${id}/status`, { status });\n  },\n}; "],"mappings":"AAAA,OAAOA,KAAK,MAA0D,OAAO;AAE7E,MAAMC,OAAO,GAAG,2BAA2B;;AAE3C;AACA,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAC1B,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,OAAOF,KAAK,GAAG;IAAEG,aAAa,EAAE,UAAUH,KAAK;EAAG,CAAC,GAAG,CAAC,CAAC;AAC1D,CAAC;;AAED;AACA,MAAMI,GAAG,GAAGP,KAAK,CAACQ,MAAM,CAAC;EACvBC,OAAO,EAAER,OAAO;EAChBS,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACAH,GAAG,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,MAAkC,IAAK;EACnE,MAAMJ,OAAO,GAAGR,aAAa,CAAC,CAAC;EAC/BY,MAAM,CAACJ,OAAO,CAACK,GAAG,CAAC,eAAe,EAAEL,OAAO,CAACJ,aAAa,CAAC;EAC1D,OAAOQ,MAAM;AACf,CAAC,CAAC;AAaF,OAAO,MAAME,cAAc,GAAG;EAC5BC,cAAc,EAAEA,CAAA,KAAM;IACpB,OAAOV,GAAG,CAACW,GAAG,CAAoB,WAAW,CAAC;EAChD,CAAC;EAEDC,cAAc,EAAGC,EAAU,IAAK;IAC9B,OAAOb,GAAG,CAACW,GAAG,CAAkB,aAAaE,EAAE,EAAE,CAAC;EACpD,CAAC;EAEDC,aAAa,EAAGC,WAAwC,IAAK;IAC3D,OAAOf,GAAG,CAACgB,IAAI,CAAkB,WAAW,EAAED,WAAW,CAAC;EAC5D,CAAC;EAEDE,aAAa,EAAEA,CAACJ,EAAU,EAAEE,WAAqC,KAAK;IACpE,OAAOf,GAAG,CAACkB,GAAG,CAAkB,aAAaL,EAAE,EAAE,EAAEE,WAAW,CAAC;EACjE,CAAC;EAEDI,aAAa,EAAGN,EAAU,IAAK;IAC7B,OAAOb,GAAG,CAACoB,MAAM,CAAC,aAAaP,EAAE,EAAE,CAAC;EACtC,CAAC;EAEDQ,mBAAmB,EAAEA,CAACR,EAAU,EAAES,MAAiC,KAAK;IACtE,OAAOtB,GAAG,CAACuB,KAAK,CAAkB,aAAaV,EAAE,SAAS,EAAE;MAAES;IAAO,CAAC,CAAC;EACzE;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}